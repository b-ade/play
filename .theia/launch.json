{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  "version": "0.2.0",
  "configurations": [
    {
        "type": "java",
        "name": "CodeLens (Launch) - NumberOfIslands",
        "request": "launch",
        "mainClass": "NumberOfIslands",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - LargestBSTinBinaryTree",
        "request": "launch",
        "mainClass": "LargestBSTinBinaryTree",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - LinkedListKthLast",
        "request": "launch",
        "mainClass": "LinkedListKthLast",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - MergeIntervals",
        "request": "launch",
        "mainClass": "MergeIntervals",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - ThreeSum",
        "request": "launch",
        "mainClass": "ThreeSum",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - ReconstructingBinaryTree",
        "request": "launch",
        "mainClass": "ReconstructingBinaryTree",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - SortColors",
        "request": "launch",
        "mainClass": "SortColors",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - WordSorting",
        "request": "launch",
        "mainClass": "WordSorting",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - WordSearch",
        "request": "launch",
        "mainClass": "WordSearch",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - ReverseLinkedList",
        "request": "launch",
        "mainClass": "ReverseLinkedList",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - InvertBinaryTree",
        "request": "launch",
        "mainClass": "InvertBinaryTree",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - BalancedBinaryTreeFromList",
        "request": "launch",
        "mainClass": "BalancedBinaryTreeFromList",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - BuddyStrings",
        "request": "launch",
        "mainClass": "BuddyStrings",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - LookNSay",
        "request": "launch",
        "mainClass": "LookNSay",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - FirstMissingPositiveInteger",
        "request": "launch",
        "mainClass": "FirstMissingPositiveInteger",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - LongestSubWithUniqueChars",
        "request": "launch",
        "mainClass": "LongestSubWithUniqueChars",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - UnivalSubTrees2",
        "request": "launch",
        "mainClass": "UnivalSubTrees2",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - UnivalSubtrees",
        "request": "launch",
        "mainClass": "UnivalSubtrees",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - ValidateBinaryTree",
        "request": "launch",
        "mainClass": "ValidateBinaryTree",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - BinaryTreeValuesAtHeight",
        "request": "launch",
        "mainClass": "BinaryTreeValuesAtHeight",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - MaximizeProfit",
        "request": "launch",
        "mainClass": "MaximizeProfit",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - TreeFromList",
        "request": "launch",
        "mainClass": "TreeFromList",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - TrappingWater",
        "request": "launch",
        "mainClass": "TrappingWater",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - DeepestNode",
        "request": "launch",
        "mainClass": "DeepestNode",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - WitnessCount",
        "request": "launch",
        "mainClass": "WitnessCount",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - PythagoreanTriplet",
        "request": "launch",
        "mainClass": "PythagoreanTriplet",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - EditDistance",
        "request": "launch",
        "mainClass": "EditDistance",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - LinkedListMinimization",
        "request": "launch",
        "mainClass": "LinkedListMinimization",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - SubArrays_1",
        "request": "launch",
        "mainClass": "SubArrays_1",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - SubArrays",
        "request": "launch",
        "mainClass": "SubArrays",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - MinContSubArraySumming",
        "request": "launch",
        "mainClass": "MinContSubArraySumming",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "CodeLens (Launch) - SingleNumber",
        "request": "launch",
        "mainClass": "SingleNumber",
        "projectName": "play_ac51065d"
    },
    {
        "type": "java",
        "name": "Debug (Launch) - Current File",
        "request": "launch",
        "mainClass": "${file}"
    },
    {
        "type": "java",
        "name": "Debug (Launch)-Palindrome<play_ac51065d>",
        "request": "launch",
        "mainClass": "Palindrome",
        "projectName": "play_ac51065d",
        "args": [
            "banana",
            "million",
            "tracecars"
        ]
    },
    {
        "type": "java",
        "name": "Debug (Launch)-MathTypeStuff",
        "request": "launch",
        "mainClass": "MathTypeStuff",
        "projectName": "play_ac51065d",
        "args": [
            "342",
            "665"
        ]
    },
    {
        "type": "java",
        "name": "Debug (Launch)-NonRepeating",
        "request": "launch",
        "mainClass": "NonRepeatingCharacters",
        "projectName": "play_ac51065d",
        "args": [
            "abrkaabcdefghijjxxx"
        ]
    },
    {
        "type": "java",
        "name": "Debug (Launch)-FakeCompiler",
        "request": "launch",
        "mainClass": "FakeCompiler",
        "projectName": "play_ac51065d",
        "args": [
            "((()))",
            "[()]{}",
            "({[)]",
            "()(){(())",
            "",
            "([{}])()",
            "()()}{(())}",
            "()(){}{}()[()(()(){}{}()[((()(){}{}()[]{(())}))]{(())}()(){}{}()[]{(())}){}{}()[]{(())}]{(())}"
        ]
    },
    {
        "type": "java",
        "name": "Debug (Launch)-FirstLastOccurrence",
        "request": "launch",
        "mainClass": "FirstLastOccurrence",
        "projectName": "play_ac51065d",
        "args": [
            "[1,3,3,5,7,8,9,9,9,15],9",
            "[100, 150, 150, 153],150",
            "[1,2,3,4,5,6,10],9"
        ]
    },
    {
        "type": "java",
        "name": "Debug (Launch)-UniqueListSort",
        "request": "launch",
        "mainClass": "UniqueListSort",
        "projectName": "play_ac51065d",
        "args": [
            "[3, 3, 2, 1, 3, 2, 1]",
            "[8,4,8,8,8,2,8,2]"
        ]
    },
    {
        "type": "java",
        "name": "Debug (Launch)-SubCheck",
        "request": "launch",
        "mainClass": "SubCheck",
        "projectName": "play_ac51065d",
        "args": [
            "[4, 7, 1 , -3, 2],5"
        ]
    },
    {
        "type": "java",
        "name": "Debug (Launch)-SingleNumber",
        "request": "launch",
        "mainClass": "SingleNumber",
        "projectName": "play_ac51065d",
        "args": []
    },
    {
        "type": "java",
        "name": "Debug (Launch)-NonDecreasing",
        "request": "launch",
        "mainClass": "NonDecreasing",
        "projectName": "play_ac51065d",
        "args": [
            "[13, 4, 7]",
            "[1,1,3,2,5,4]"
        ]
    },
    {
        "type": "java",
        "name": "Debug (Launch)-ListIntersect",
        "request": "launch",
        "mainClass": "ListIntersect",
        "projectName": "play_ac51065d",
        "args": [
            "[1,1,3,2,5,4]",
            "[13, 4, 7]"
        ]
    }
]
}